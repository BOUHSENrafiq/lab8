{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cart.service.ts","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/product-alerts/product-alerts.component.ts","./src/app/product-alerts/product-alerts.component.html","./src/app/product-details/product-details.component.ts","./src/app/product-details/product-details.component.html","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/app/products.ts","./src/app/shipping/shipping.component.ts","./src/app/shipping/shipping.component.html","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [ './app.component.css' ]\r\n})\r\nexport class AppComponent  {}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","<app-top-bar></app-top-bar>\r\n\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n-->","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { TopBarComponent } from './top-bar/top-bar.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductAlertsComponent } from './product-alerts/product-alerts.component';\r\nimport { ProductDetailsComponent } from './product-details/product-details.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ShippingComponent } from './shipping/shipping.component';\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: ProductListComponent },\r\n      // route for product details, with a path of products/:productId\r\n      { path: 'products/:productId', component: ProductDetailsComponent },\r\n      { path: 'cart', component: CartComponent },\r\n      { path: 'shipping', component: ShippingComponent },\r\n    ])\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    TopBarComponent,\r\n    ProductListComponent,\r\n    ProductAlertsComponent,\r\n    ProductDetailsComponent,\r\n    CartComponent,\r\n    ShippingComponent\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","import {Injectable} from '@angular/core';\n//  inject the HttpClient service into your service so the app can fetch data and interact with external APIs and resources.\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  // store the array of the current products in the cart.\n  items = [];\n  // Injection of the HttpClient service.\n  constructor(\n    private http: HttpClient\n  ) {}\n  // Method appends a product to an array of items.\n  addToCart(product) {\n    this.items.push(product);\n  }\n\n// Method collects the items users add to the cart and returns each item with its associated quantity.\n  getItems() {\n    return this.items;\n  }\n\n// Method returns an empty array of items\n  clearCart() {\n    this.items = [];\n    return this.items;\n  }\n  // Method to retrieve the shipping data.\n  getShippingPrices() {\n    return this.http.get('/assets/shipping.json');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { CartService } from '../cart.service';\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  items;\n  checkoutForm;\n  constructor( private cartService: CartService,\n               private formBuilder: FormBuilder, ){\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n  }\n\n  ngOnInit(){\n    // getItems defined in cart.service.ts\n    this.items = this.cartService.getItems();\n  }\n  onSubmit(customerData) {\n    // Process checkout data here\n    this.items = this.cartService.clearCart();\n    this.checkoutForm.reset();\n    console.warn('Thanks for your shopping with us! Your order has been submitted', customerData);\n  }\n}\n","<h3>Cart</h3>\n<p>\n  <a routerLink=\"/shipping\">Shipping Prices</a>\n</p>\n<div class=\"cart-item\" *ngFor=\"let item of items\">\n  <span>{{ item.name }}</span>\n  <span>{{ item.price | currency }}</span>\n</div>\n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit(checkoutForm.value)\">\n\n  <div>\n    <label for=\"name\">\n      Name\n    </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\n  </div>\n\n  <div>\n    <label for=\"address\">\n      Address\n    </label>\n    <input id=\"address\" type=\"text\" formControlName=\"address\">\n  </div>\n\n  <button class=\"button\" type=\"submit\">Purchase</button>\n\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Output, EventEmitter } from '@angular/core';\n@Component({\n  selector: 'app-product-alerts',\n  templateUrl: './product-alerts.component.html',\n  styleUrls: ['./product-alerts.component.css']\n})\nexport class ProductAlertsComponent implements OnInit {\n  /*\n  *property named product with an @Input() decorator.\n  *The @Input() decorator indicates that the property value passes in from the component's parent, the product list component.\n   */\n  @Input() product;\n  /* All objects that emit events are instances of the EventEmitter class */\n  @Output() notify = new EventEmitter();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","\n<!--\"Notify Me\" button that appears if the product price is over $700.-->\n<p id=\"text\" *ngIf=\"product.price > 700\">\n    <!--Event binding to call the notify.emit() method-->\n    <button (click)=\"notify.emit()\">Notify Me</button>\n</p>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {products} from '../products';\nimport {CartService} from '../cart.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  // product property\n  product;\n\n  // configuring the component to use tow services by injecting the ActivatedRoute and CartService\n  constructor(private route: ActivatedRoute, private cartService: CartService) {\n  }\n\n  // ngOnInit() method\n  // subscribe to route parameters\n  // fetch the product based on the productId.\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.product = products[+params.get('productId')];\n    });\n  }\n  // The addToCart() method does the following three things:\n  // Receives the current product.\n  // Uses the cart service's addToCart() method to add the product the cart.\n  // Displays a message that you've added a product to the cart.\n  addToCart(product) {\n    this.cartService.addToCart(product);\n    window.alert('Great! your product has been added to the cart!');\n  }\n}\n","<h2>Product Details</h2>\n<!-- display product details information inside an *ngIf.-->\n<div *ngIf=\"product\">\n  <h3>{{ product.name }}</h3>\n<!-- pipe to transform product.price from a number to a currency string. -->\n  <h4>{{ product.price | currency }}</h4>\n  <p>{{ product.description }}</p>\n  <button (click)=\"addToCart(product)\">Buy</button>\n</div>\n\n","import { Component } from '@angular/core';\r\n\r\nimport { products } from '../products';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent {\r\n  products = products;\r\n\r\n  share() {\r\n    window.alert('The product has been shared!');\r\n  }\r\n  onNotify() {\r\n    window.alert('You will be notified when the product goes on sale');\r\n  }\r\n}\r\n","<h2>Products</h2>\r\n\r\n<!--    display a list of product names from products.ts.\r\n        To iterate over the predefined list of products, put the *ngFor directive on a <div>\r\n        With *ngFor, the <div> repeats for each product in the list.\r\n        Directives with an asterisk are structural directives.\r\n-->\r\n<div *ngFor=\"let product of products; index as productId\">\r\n\r\n    <!--    To display the names of the products, use the interpolation syntax {{ }}.\r\n            Interpolation renders a property's value as text.\r\n            Inside the <div>, add an <h3> to display the interpolation of the product's name property:\r\n             Syntax: <h3>{{ product.name }}</h3>\r\n    -->\r\n    <h3>\r\n        <!-- Make each product name a link to product details\r\n             Add the <a> element and set its title to be the product's name by using the property binding [ ]\r\n             The RouterLink directive gives the router control over the anchor element\r\n        -->\r\n        <a [title]=\"product.name + ' :for details press link'\" [routerLink]=\"['/products', productId]\">\r\n            {{ product.name }}\r\n        </a>\r\n    </h3>\r\n        <!--    Add the product descriptions.\r\n                On the <p> element, use an *ngIf directive so that Angular only creates the <p> element if the current product has a description.\r\n        -->\r\n    <p *ngIf=\"product.description\">\r\n        Description: {{ product.description }}\r\n    </p>\r\n\r\n    <!-- Bind the button's click event to the share() method -->\r\n    <button (click)=\"share()\">\r\n        Share\r\n    </button>\r\n    <app-product-alerts\r\n            [product]=\"product\" (notify)=\"onNotify()\">\r\n    </app-product-alerts>\r\n</div>\r\n","/* data */\r\n\r\nexport const products = [\r\n  {\r\n    name: 'Phone 1',\r\n    price: 799,\r\n    description: 'A large phone with one of the best screens'\r\n  },\r\n  {\r\n    name: 'Phone 2',\r\n    price: 699,\r\n    description: 'A great phone with one of the best cameras'\r\n  },\r\n  {\r\n    name: 'Phone 3',\r\n    price: 299,\r\n    description: 'Standard phone'\r\n  },\r\n  {\r\n    name: 'Phone 4',\r\n    price: 900,\r\n    description: 'lux phone'\r\n  }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\n@Component({\n  selector: 'app-shipping',\n  templateUrl: './shipping.component.html',\n  styleUrls: ['./shipping.component.css']\n})\nexport class ShippingComponent implements OnInit {\n  shippingCosts;\n  constructor(private cartService: CartService) { }\n\n  ngOnInit(){\n    // getShippingPrices() method from the cart service\n    this.shippingCosts = this.cartService.getShippingPrices();\n  }\n\n}\n","<h3>shipping Prices</h3>\n<!-- The async pipe returns the latest value from a stream of data and continues to do so for the life of a given component -->\n<div class=\"shipping-item\" *ngFor=\"let shipping of shippingCosts | async\">\n  <span>{{ shipping.type }}</span>\n  <span>{{ shipping.price | currency }}</span>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<a [routerLink]=\"['/']\">\r\n  <h1>My Store</h1>\r\n</a>\r\n\r\n<a routerLink=\"/cart\" class=\"button fancy-button\"><i class=\"material-icons\">shopping_cart</i>Checkout</a>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}