{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart.service.ts","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/product-alerts/product-alerts.component.ts","webpack:///src/app/product-alerts/product-alerts.component.html","webpack:///src/app/product-details/product-details.component.ts","webpack:///src/app/product-details/product-details.component.html","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/products.ts","webpack:///src/app/shipping/shipping.component.ts","webpack:///src/app/shipping/shipping.component.html","webpack:///src/app/top-bar/top-bar.component.ts","webpack:///src/app/top-bar/top-bar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","AppModule","forRoot","path","component","imports","declarations","bootstrap","CartService","http","items","product","push","get","providedIn","CartComponent","cartService","formBuilder","checkoutForm","group","name","address","getItems","customerData","clearCart","reset","console","warn","onSubmit","notify","ProductAlertsComponent","ProductDetailsComponent","route","paramMap","subscribe","params","addToCart","window","alert","ProductListComponent","products","price","description","ShippingComponent","shippingCosts","getShippingPrices","TopBarComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [ './app.component.css' ]\r\n})\r\nexport class AppComponent  {}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/","<app-top-bar></app-top-bar>\r\n\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n-->","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { TopBarComponent } from './top-bar/top-bar.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductAlertsComponent } from './product-alerts/product-alerts.component';\r\nimport { ProductDetailsComponent } from './product-details/product-details.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ShippingComponent } from './shipping/shipping.component';\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: ProductListComponent },\r\n      // route for product details, with a path of products/:productId\r\n      { path: 'products/:productId', component: ProductDetailsComponent },\r\n      { path: 'cart', component: CartComponent },\r\n      { path: 'shipping', component: ShippingComponent },\r\n    ])\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    TopBarComponent,\r\n    ProductListComponent,\r\n    ProductAlertsComponent,\r\n    ProductDetailsComponent,\r\n    CartComponent,\r\n    ShippingComponent\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","import {Injectable} from '@angular/core';\n//  inject the HttpClient service into your service so the app can fetch data and interact with external APIs and resources.\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  // store the array of the current products in the cart.\n  items = [];\n  // Injection of the HttpClient service.\n  constructor(\n    private http: HttpClient\n  ) {}\n  // Method appends a product to an array of items.\n  addToCart(product) {\n    this.items.push(product);\n  }\n\n// Method collects the items users add to the cart and returns each item with its associated quantity.\n  getItems() {\n    return this.items;\n  }\n\n// Method returns an empty array of items\n  clearCart() {\n    this.items = [];\n    return this.items;\n  }\n  // Method to retrieve the shipping data.\n  getShippingPrices() {\n    return this.http.get('/assets/shipping.json');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { CartService } from '../cart.service';\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  items;\n  checkoutForm;\n  constructor( private cartService: CartService,\n               private formBuilder: FormBuilder, ){\n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n  }\n\n  ngOnInit(){\n    // getItems defined in cart.service.ts\n    this.items = this.cartService.getItems();\n  }\n  onSubmit(customerData) {\n    // Process checkout data here\n    this.items = this.cartService.clearCart();\n    this.checkoutForm.reset();\n    console.warn('Thanks for your shopping with us! Your order has been submitted', customerData);\n  }\n}\n","<h3>Cart</h3>\n<p>\n  <a routerLink=\"/shipping\">Shipping Prices</a>\n</p>\n<div class=\"cart-item\" *ngFor=\"let item of items\">\n  <span>{{ item.name }}</span>\n  <span>{{ item.price | currency }}</span>\n</div>\n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit(checkoutForm.value)\">\n\n  <div>\n    <label for=\"name\">\n      Name\n    </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\n  </div>\n\n  <div>\n    <label for=\"address\">\n      Address\n    </label>\n    <input id=\"address\" type=\"text\" formControlName=\"address\">\n  </div>\n\n  <button class=\"button\" type=\"submit\">Purchase</button>\n\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Output, EventEmitter } from '@angular/core';\n@Component({\n  selector: 'app-product-alerts',\n  templateUrl: './product-alerts.component.html',\n  styleUrls: ['./product-alerts.component.css']\n})\nexport class ProductAlertsComponent implements OnInit {\n  /*\n  *property named product with an @Input() decorator.\n  *The @Input() decorator indicates that the property value passes in from the component's parent, the product list component.\n   */\n  @Input() product;\n  /* All objects that emit events are instances of the EventEmitter class */\n  @Output() notify = new EventEmitter();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","\n<!--\"Notify Me\" button that appears if the product price is over $700.-->\n<p id=\"text\" *ngIf=\"product.price > 700\">\n    <!--Event binding to call the notify.emit() method-->\n    <button (click)=\"notify.emit()\">Notify Me</button>\n</p>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {products} from '../products';\nimport {CartService} from '../cart.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  // product property\n  product;\n\n  // configuring the component to use tow services by injecting the ActivatedRoute and CartService\n  constructor(private route: ActivatedRoute, private cartService: CartService) {\n  }\n\n  // ngOnInit() method\n  // subscribe to route parameters\n  // fetch the product based on the productId.\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.product = products[+params.get('productId')];\n    });\n  }\n  // The addToCart() method does the following three things:\n  // Receives the current product.\n  // Uses the cart service's addToCart() method to add the product the cart.\n  // Displays a message that you've added a product to the cart.\n  addToCart(product) {\n    this.cartService.addToCart(product);\n    window.alert('Great! your product has been added to the cart!');\n  }\n}\n","<h2>Product Details</h2>\n<!-- display product details information inside an *ngIf.-->\n<div *ngIf=\"product\">\n  <h3>{{ product.name }}</h3>\n<!-- pipe to transform product.price from a number to a currency string. -->\n  <h4>{{ product.price | currency }}</h4>\n  <p>{{ product.description }}</p>\n  <button (click)=\"addToCart(product)\">Buy</button>\n</div>\n\n","import { Component } from '@angular/core';\r\n\r\nimport { products } from '../products';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent {\r\n  products = products;\r\n\r\n  share() {\r\n    window.alert('The product has been shared!');\r\n  }\r\n  onNotify() {\r\n    window.alert('You will be notified when the product goes on sale');\r\n  }\r\n}\r\n","<h2>Products</h2>\r\n\r\n<!--    display a list of product names from products.ts.\r\n        To iterate over the predefined list of products, put the *ngFor directive on a <div>\r\n        With *ngFor, the <div> repeats for each product in the list.\r\n        Directives with an asterisk are structural directives.\r\n-->\r\n<div *ngFor=\"let product of products; index as productId\">\r\n\r\n    <!--    To display the names of the products, use the interpolation syntax {{ }}.\r\n            Interpolation renders a property's value as text.\r\n            Inside the <div>, add an <h3> to display the interpolation of the product's name property:\r\n             Syntax: <h3>{{ product.name }}</h3>\r\n    -->\r\n    <h3>\r\n        <!-- Make each product name a link to product details\r\n             Add the <a> element and set its title to be the product's name by using the property binding [ ]\r\n             The RouterLink directive gives the router control over the anchor element\r\n        -->\r\n        <a [title]=\"product.name + ' :for details press link'\" [routerLink]=\"['/products', productId]\">\r\n            {{ product.name }}\r\n        </a>\r\n    </h3>\r\n        <!--    Add the product descriptions.\r\n                On the <p> element, use an *ngIf directive so that Angular only creates the <p> element if the current product has a description.\r\n        -->\r\n    <p *ngIf=\"product.description\">\r\n        Description: {{ product.description }}\r\n    </p>\r\n\r\n    <!-- Bind the button's click event to the share() method -->\r\n    <button (click)=\"share()\">\r\n        Share\r\n    </button>\r\n    <app-product-alerts\r\n            [product]=\"product\" (notify)=\"onNotify()\">\r\n    </app-product-alerts>\r\n</div>\r\n","/* data */\r\n\r\nexport const products = [\r\n  {\r\n    name: 'Phone 1',\r\n    price: 799,\r\n    description: 'A large phone with one of the best screens'\r\n  },\r\n  {\r\n    name: 'Phone 2',\r\n    price: 699,\r\n    description: 'A great phone with one of the best cameras'\r\n  },\r\n  {\r\n    name: 'Phone 3',\r\n    price: 299,\r\n    description: 'Standard phone'\r\n  },\r\n  {\r\n    name: 'Phone 4',\r\n    price: 900,\r\n    description: 'lux phone'\r\n  }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../cart.service';\n@Component({\n  selector: 'app-shipping',\n  templateUrl: './shipping.component.html',\n  styleUrls: ['./shipping.component.css']\n})\nexport class ShippingComponent implements OnInit {\n  shippingCosts;\n  constructor(private cartService: CartService) { }\n\n  ngOnInit(){\n    // getShippingPrices() method from the cart service\n    this.shippingCosts = this.cartService.getShippingPrices();\n  }\n\n}\n","<h3>shipping Prices</h3>\n<!-- The async pipe returns the latest value from a stream of data and continues to do so for the life of a given component -->\n<div class=\"shipping-item\" *ngFor=\"let shipping of shippingCosts | async\">\n  <span>{{ shipping.type }}</span>\n  <span>{{ shipping.price | currency }}</span>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<a [routerLink]=\"['/']\">\r\n  <h1>My Store</h1>\r\n</a>\r\n\r\n<a routerLink=\"/cart\" class=\"button fancy-button\"><i class=\"material-icons\">shopping_cart</i>Checkout</a>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}